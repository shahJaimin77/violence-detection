
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage,Label
from PIL import Image, ImageTk
from main import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\91829\Desktop\build\assets\frame0")
DETECTION_STATUS = False

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

path=r"C:\Jaimin\Personal\violence_detection_repos\test_videos\street_fight2.mp4"
video_capture=cv2.VideoCapture(path)   #changing paths
if writeVideo_flag:
# Define the codec and create VideoWriter object
    w=int(video_capture.get(3))
    h=int(video_capture.get(4))
    fourcc=cv2.VideoWriter_fourcc(*'MJPG')
    out=cv2.VideoWriter(path+'_out.avi',fourcc,6,(w,h))
def start_detection():
    global DETECTION_STATUS
    print("Start detection")
    frame_index=0
    person_TS={}
    count=0 
    fps=0.0
    labels={}
    if not DETECTION_STATUS :
        DETECTION_STATUS= True
        print("detecting")
        ret,frame=video_capture.read()  # frame shape 640*480*3
        output_frame = detect_violence(frame)
        pil_frame = Image.fromarray(output_frame)
        imgtk = ImageTk.PhotoImage(image=pil_frame)

        #Create a Label to display the image
        # Label(window, image= imgtk).pack()
        if writeVideo_flag:
            #     # Saving frame
            out.write(output_frame)
        DETECTION_STATUS = False
        print("start detection function ends")
                
def stop_detection():
    print("Stop detection")
    video_capture.release()
    if writeVideo_flag:
        out.release()

def detection_loop():
    if DETECTION_STATUS:
        pass
    else:
        start_detection


window = Tk()

window.geometry("1079x675")
window.configure(bg = "#404040")


canvas = Canvas(
    window,
    bg = "#404040",
    height = 675,
    width = 1079,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    1080.0,
    676.0,
    fill="#FFFFFF",
    outline="")

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=start_detection,
    relief="flat"
)
button_1.place(
    x=689.0,
    y=141.0,
    width=187.0,
    height=46.0
)

canvas.create_rectangle(
    78.0,
    67.0,
    538.0,
    442.0,
    fill="#FFFFFF",
    outline="")

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=stop_detection,
    relief="flat"
)
button_2.place(
    x=689.0,
    y=216.0,
    width=187.0,
    height=46.0
)

canvas.create_rectangle(
    92.0,
    82.0,
    522.0,
    428.0,
    fill="#FFFFFF",
    outline="")

window.resizable(False, False)
window.after(20,detection_loop)
window.mainloop()
